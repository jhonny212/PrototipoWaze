    private ImageView imageView = new ImageView();
    private ScrollPane scrollPane = new ScrollPane();
    final DoubleProperty zoomProperty = new SimpleDoubleProperty(200);




        /*zoomProperty.addListener(new InvalidationListener() {
            @Override
            public void invalidated(Observable arg0) {
                imageView.setFitWidth(zoomProperty.get() * 4);
                imageView.setFitHeight(zoomProperty.get() * 3);
            }
        });

        scrollPane.addEventFilter(ScrollEvent.ANY, new EventHandler<ScrollEvent>() {
            @Override
            public void handle(ScrollEvent event) {
                if (event.getDeltaY() > 0) {
                    zoomProperty.set(zoomProperty.get() * 1.1);
                } else if (event.getDeltaY() < 0) {
                    zoomProperty.set(zoomProperty.get() / 1.1);
                }
            }
        });
        path="/home/jhonny/Escritorio/5to. Semestre/Proyecto/laboratorio estructura de datos/diagra.png";
        path.substring(path.lastIndexOf("\\")+1);
        imageView.setImage(new Image(new FileInputStream(path)));
        imageView.preserveRatioProperty().set(true);
        scrollPane.setContent(imageView);
        HBox box=new HBox();
        box.getChildren().add(scrollPane);
        Button f=new Button("F");
        f.setPrefWidth(100);
        box.getChildren().add(f);

        stage.setScene(new Scene(box, 400, 300));
        stage.show();*/






        Parent root = FXMLLoader.load(getClass().getResource("sample.fxml"));
                primaryStage.setTitle("Hello World");
                primaryStage.setScene(new Scene(root, 300, 275));
                primaryStage.show();


                //----------------------------------------->
                   public static void initView(){
                        VBox root = new VBox(20);
                        root.setAlignment(Pos.CENTER);

                        Label title = new Label(path.substring(path.lastIndexOf("\\")+1));
                        Image source = null;
                        try {
                            source = new Image(new FileInputStream(path));

                        } catch (FileNotFoundException e) {
                            e.printStackTrace();
                        }
                        ImageView image = new ImageView(source);

                        double ratio = source.getWidth()/source.getHeight();

                        if(500/ratio < 500) {
                            width=500;
                            height=(int) (500/ratio);
                        }else if(500*ratio < 500){
                            height=500;
                            width=(int) (500*ratio);
                        }else {
                            height=500;
                            width=500;
                        }
                        image.setPreserveRatio(false);
                        image.setFitWidth(width);
                        image.setFitHeight(height);
                        height = (int) source.getHeight();
                        width = (int) source.getWidth();
                        System.out.println("height = "+height+"\nwidth = "+width);
                        HBox zoom = new HBox(10);
                        zoom.setAlignment(Pos.CENTER);

                        Slider zoomLvl = new Slider();
                        zoomLvl.setMax(4);
                        zoomLvl.setMin(1);
                        zoomLvl.setMaxWidth(200);
                        zoomLvl.setMinWidth(200);
                        Label hint = new Label("Zoom Level");
                        Label value = new Label("1.0");

                        offSetX = width/2;
                        offSetY = height/2;

                        zoom.getChildren().addAll(hint,zoomLvl,value);

                        Slider Hscroll = new Slider();
                        Hscroll.setMin(0);
                        Hscroll.setMax(width);
                        Hscroll.setMaxWidth(image.getFitWidth());
                        Hscroll.setMinWidth(image.getFitWidth());
                        Hscroll.setTranslateY(-20);
                        Slider Vscroll = new Slider();
                        Vscroll.setMin(0);
                        Vscroll.setMax(height);
                        Vscroll.setMaxHeight(image.getFitHeight());
                        Vscroll.setMinHeight(image.getFitHeight());
                        Vscroll.setOrientation(Orientation.VERTICAL);
                        Vscroll.setTranslateX(-20);


                        BorderPane imageView = new BorderPane();

                        BorderPane.setAlignment(Hscroll, Pos.CENTER);
                        BorderPane.setAlignment(Vscroll, Pos.CENTER_LEFT);
                        Hscroll.valueProperty().addListener(e->{
                            offSetX = Hscroll.getValue();
                            zoomlvl = zoomLvl.getValue();
                            double newValue = (double)((int)(zoomlvl*10))/10;
                            value.setText(newValue+"");
                            if(offSetX<(width/newValue)/2) {
                                offSetX = (width/newValue)/2;
                            }
                            if(offSetX>width-((width/newValue)/2)) {
                                offSetX = width-((width/newValue)/2);
                            }

                            image.setViewport(new Rectangle2D(offSetX-((width/newValue)/2), offSetY-((height/newValue)/2), width/newValue, height/newValue));
                        });
                        Vscroll.valueProperty().addListener(e->{
                            offSetY = height-Vscroll.getValue();
                            zoomlvl = zoomLvl.getValue();
                            double newValue = (double)((int)(zoomlvl*10))/10;
                            value.setText(newValue+"");
                            if(offSetY<(height/newValue)/2) {
                                offSetY = (height/newValue)/2;
                            }
                            if(offSetY>height-((height/newValue)/2)) {
                                offSetY = height-((height/newValue)/2);
                            }
                            image.setViewport(new Rectangle2D(offSetX-((width/newValue)/2), offSetY-((height/newValue)/2), width/newValue, height/newValue));
                        });
                        imageView.setCenter(image);
                        imageView.setTop(Hscroll);
                        imageView.setRight(Vscroll);
                        zoomLvl.valueProperty().addListener(e->{
                            zoomlvl = zoomLvl.getValue();
                            double newValue = (double)((int)(zoomlvl*10))/10;
                            value.setText(newValue+"");
                            if(offSetX<(width/newValue)/2) {
                                offSetX = (width/newValue)/2;
                            }
                            if(offSetX>width-((width/newValue)/2)) {
                                offSetX = width-((width/newValue)/2);
                            }
                            if(offSetY<(height/newValue)/2) {
                                offSetY = (height/newValue)/2;
                            }
                            if(offSetY>height-((height/newValue)/2)) {
                                offSetY = height-((height/newValue)/2);
                            }
                            Hscroll.setValue(offSetX);
                            Vscroll.setValue(height-offSetY);
                            image.setViewport(new Rectangle2D(offSetX-((width/newValue)/2), offSetY-((height/newValue)/2), width/newValue, height/newValue));
                        });
                        imageView.setCursor(Cursor.OPEN_HAND);
                        image.setOnMousePressed(e->{
                            initx = e.getSceneX();
                            inity = e.getSceneY();
                            imageView.setCursor(Cursor.CLOSED_HAND);
                        });
                        image.setOnMouseReleased(e->{
                            imageView.setCursor(Cursor.OPEN_HAND);
                        });
                        image.setOnMouseDragged(e->{
                            Hscroll.setValue(Hscroll.getValue()+(initx - e.getSceneX()));
                            Vscroll.setValue(Vscroll.getValue()-(inity - e.getSceneY()));
                            initx = e.getSceneX();
                            inity = e.getSceneY();
                        });
                        root.getChildren().addAll(imageView,zoom);
                        //HBox Box=new HBox();
                        //Box.getChildren().addAll(root,new Button("F"));
                        View = new Scene(root);
                        //View=new Scene(Box);

                    }

---------------------------